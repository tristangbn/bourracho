// This file is auto-generated by @hey-api/openapi-ts

/**
 * ErrorResponse
 */
export type ErrorResponse = {
  /**
   * Error
   */
  error: string
}

/**
 * UserPayload
 */
export type UserPayload = {
  /**
   * Username
   */
  username: string
  /**
   * Password
   */
  password: string
}

/**
 * User
 */
export type User = {
  /**
   * Id
   */
  id: string
  /**
   * Username
   */
  username: string
  /**
   * Password Hash
   */
  password_hash: string
  /**
   * Pseudo
   */
  pseudo?: string | null
  /**
   * Location
   */
  location?: string | null
}

/**
 * Conversation
 */
export type Conversation = {
  /**
   * Id
   */
  id?: string
  /**
   * Users Ids
   */
  users_ids?: Array<string>
  /**
   * Name
   */
  name?: string
  /**
   * Is Locked
   */
  is_locked?: boolean
}

/**
 * Message
 */
export type Message = {
  /**
   * Id
   */
  id?: string
  /**
   * Content
   */
  content: string
  /**
   * Conversation Id
   */
  conversation_id: string
  /**
   * Issuer Id
   */
  issuer_id: string
  /**
   * Timestamp
   */
  timestamp?: string
  /**
   * Reacts
   */
  reacts?: Array<React>
}

/**
 * React
 */
export type React = {
  /**
   * Emoji
   */
  emoji: string
  /**
   * Issuer Id
   */
  issuer_id?: string | null
}

export type ConversationsApiApiRegisterUserData = {
  body: UserPayload
  path?: never
  query?: never
  url: '/api/register/'
}

export type ConversationsApiApiRegisterUserErrors = {
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiRegisterUserError =
  ConversationsApiApiRegisterUserErrors[keyof ConversationsApiApiRegisterUserErrors]

export type ConversationsApiApiRegisterUserResponses = {
  /**
   * Response
   * OK
   */
  200: {
    [key: string]: unknown
  }
}

export type ConversationsApiApiRegisterUserResponse =
  ConversationsApiApiRegisterUserResponses[keyof ConversationsApiApiRegisterUserResponses]

export type ConversationsApiApiLoginData = {
  body: UserPayload
  path?: never
  query?: never
  url: '/api/login/'
}

export type ConversationsApiApiLoginErrors = {
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiLoginError =
  ConversationsApiApiLoginErrors[keyof ConversationsApiApiLoginErrors]

export type ConversationsApiApiLoginResponses = {
  /**
   * OK
   */
  200: User
}

export type ConversationsApiApiLoginResponse =
  ConversationsApiApiLoginResponses[keyof ConversationsApiApiLoginResponses]

export type ConversationsApiApiListConversationsData = {
  body?: never
  path?: never
  query?: never
  url: '/api/chat/'
}

export type ConversationsApiApiListConversationsErrors = {
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiListConversationsError =
  ConversationsApiApiListConversationsErrors[keyof ConversationsApiApiListConversationsErrors]

export type ConversationsApiApiListConversationsResponses = {
  /**
   * Response
   * OK
   */
  200: Array<Conversation>
}

export type ConversationsApiApiListConversationsResponse =
  ConversationsApiApiListConversationsResponses[keyof ConversationsApiApiListConversationsResponses]

export type ConversationsApiApiCreateConversationData = {
  body: Conversation
  path?: never
  query?: never
  url: '/api/chat/'
}

export type ConversationsApiApiCreateConversationErrors = {
  /**
   * Unprocessable Entity
   */
  422: ErrorResponse
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiCreateConversationError =
  ConversationsApiApiCreateConversationErrors[keyof ConversationsApiApiCreateConversationErrors]

export type ConversationsApiApiCreateConversationResponses = {
  /**
   * OK
   */
  200: Conversation
}

export type ConversationsApiApiCreateConversationResponse =
  ConversationsApiApiCreateConversationResponses[keyof ConversationsApiApiCreateConversationResponses]

export type ConversationsApiApiJoinConversationData = {
  body?: never
  path: {
    /**
     * Conversation Id
     */
    conversation_id: string
  }
  query?: never
  url: '/api/chat/{conversation_id}/join'
}

export type ConversationsApiApiJoinConversationErrors = {
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiJoinConversationError =
  ConversationsApiApiJoinConversationErrors[keyof ConversationsApiApiJoinConversationErrors]

export type ConversationsApiApiJoinConversationResponses = {
  /**
   * OK
   */
  200: Conversation
}

export type ConversationsApiApiJoinConversationResponse =
  ConversationsApiApiJoinConversationResponses[keyof ConversationsApiApiJoinConversationResponses]

export type ConversationsApiApiGetMessagesData = {
  body?: never
  path: {
    /**
     * Conversation Id
     */
    conversation_id: string
  }
  query?: never
  url: '/api/chat/{conversation_id}/messages/'
}

export type ConversationsApiApiGetMessagesErrors = {
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiGetMessagesError =
  ConversationsApiApiGetMessagesErrors[keyof ConversationsApiApiGetMessagesErrors]

export type ConversationsApiApiGetMessagesResponses = {
  /**
   * Response
   * OK
   */
  200: Array<Message>
}

export type ConversationsApiApiGetMessagesResponse =
  ConversationsApiApiGetMessagesResponses[keyof ConversationsApiApiGetMessagesResponses]

export type ConversationsApiApiPostMessageData = {
  body: Message
  path: {
    /**
     * Conversation Id
     */
    conversation_id: string
  }
  query?: never
  url: '/api/chat/{conversation_id}/messages/'
}

export type ConversationsApiApiPostMessageErrors = {
  /**
   * Unprocessable Entity
   */
  422: ErrorResponse
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiPostMessageError =
  ConversationsApiApiPostMessageErrors[keyof ConversationsApiApiPostMessageErrors]

export type ConversationsApiApiPostMessageResponses = {
  /**
   * OK
   */
  200: Message
}

export type ConversationsApiApiPostMessageResponse =
  ConversationsApiApiPostMessageResponses[keyof ConversationsApiApiPostMessageResponses]

export type ConversationsApiApiGetConversationData = {
  body?: never
  path: {
    /**
     * Conversation Id
     */
    conversation_id: string
  }
  query?: never
  url: '/api/chat/{conversation_id}'
}

export type ConversationsApiApiGetConversationErrors = {
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiGetConversationError =
  ConversationsApiApiGetConversationErrors[keyof ConversationsApiApiGetConversationErrors]

export type ConversationsApiApiGetConversationResponses = {
  /**
   * OK
   */
  200: Conversation
}

export type ConversationsApiApiGetConversationResponse =
  ConversationsApiApiGetConversationResponses[keyof ConversationsApiApiGetConversationResponses]

export type ConversationsApiApiPatchConversationData = {
  body: Conversation
  path: {
    /**
     * Conversation Id
     */
    conversation_id: string
  }
  query?: never
  url: '/api/chat/{conversation_id}'
}

export type ConversationsApiApiPatchConversationErrors = {
  /**
   * Unprocessable Entity
   */
  422: ErrorResponse
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiPatchConversationError =
  ConversationsApiApiPatchConversationErrors[keyof ConversationsApiApiPatchConversationErrors]

export type ConversationsApiApiPatchConversationResponses = {
  /**
   * OK
   */
  200: Conversation
}

export type ConversationsApiApiPatchConversationResponse =
  ConversationsApiApiPatchConversationResponses[keyof ConversationsApiApiPatchConversationResponses]

export type ConversationsApiApiGetUsersData = {
  body?: never
  path?: never
  query?: never
  url: '/api/users'
}

export type ConversationsApiApiGetUsersErrors = {
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiGetUsersError =
  ConversationsApiApiGetUsersErrors[keyof ConversationsApiApiGetUsersErrors]

export type ConversationsApiApiGetUsersResponses = {
  /**
   * Response
   * OK
   */
  200: Array<User>
}

export type ConversationsApiApiGetUsersResponse =
  ConversationsApiApiGetUsersResponses[keyof ConversationsApiApiGetUsersResponses]

export type ConversationsApiApiPatchMessageData = {
  body: Message
  path: {
    /**
     * Conversation Id
     */
    conversation_id: string
  }
  query?: never
  url: '/api/chat/{conversation_id}/messages'
}

export type ConversationsApiApiPatchMessageErrors = {
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiPatchMessageError =
  ConversationsApiApiPatchMessageErrors[keyof ConversationsApiApiPatchMessageErrors]

export type ConversationsApiApiPatchMessageResponses = {
  /**
   * Response
   * OK
   */
  200: {
    [key: string]: unknown
  }
}

export type ConversationsApiApiPatchMessageResponse =
  ConversationsApiApiPatchMessageResponses[keyof ConversationsApiApiPatchMessageResponses]

export type ClientOptions = {
  baseURL: string
}
