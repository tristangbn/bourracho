// This file is auto-generated by @hey-api/openapi-ts

/**
 * ErrorResponse
 */
export type ErrorResponse = {
  /**
   * Error
   */
  error: string
}

/**
 * User
 */
export type User = {
  /**
   * Id
   */
  id: string
  /**
   * Name
   */
  name: string
  /**
   * Pseudo
   */
  pseudo?: string | null
  /**
   * Location
   */
  location?: string | null
  /**
   * Is Admin
   */
  is_admin?: boolean
}

/**
 * ConversationMetadata
 */
export type ConversationMetadata = {
  /**
   * Name
   */
  name?: string
  /**
   * Id
   */
  id?: string | null
  /**
   * Is Locked
   */
  is_locked?: boolean
}

/**
 * Message
 */
export type Message = {
  /**
   * Content
   */
  content: string
  /**
   * Issuer Id
   */
  issuer_id?: string | null
  /**
   * Id
   */
  id?: string | null
  /**
   * Timestamp
   */
  timestamp?: string | null
  /**
   * Reacts
   */
  reacts?: Array<React>
}

/**
 * React
 */
export type React = {
  /**
   * Emoji
   */
  emoji: string
  /**
   * Issuer Id
   */
  issuer_id?: string | null
}

export type ConversationsApiApiRegisterUserData = {
  body: User
  path?: never
  query?: never
  url: '/api/auth/'
}

export type ConversationsApiApiRegisterUserErrors = {
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiRegisterUserError =
  ConversationsApiApiRegisterUserErrors[keyof ConversationsApiApiRegisterUserErrors]

export type ConversationsApiApiRegisterUserResponses = {
  /**
   * Response
   * OK
   */
  200: {
    [key: string]: string
  }
}

export type ConversationsApiApiRegisterUserResponse =
  ConversationsApiApiRegisterUserResponses[keyof ConversationsApiApiRegisterUserResponses]

export type ConversationsApiApiCreateConversationData = {
  body: ConversationMetadata
  path: {
    /**
     * User Id
     */
    user_id: string
  }
  query?: never
  url: '/api/conversations/{user_id}/create'
}

export type ConversationsApiApiCreateConversationErrors = {
  /**
   * Unprocessable Entity
   */
  422: ErrorResponse
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiCreateConversationError =
  ConversationsApiApiCreateConversationErrors[keyof ConversationsApiApiCreateConversationErrors]

export type ConversationsApiApiCreateConversationResponses = {
  /**
   * Response
   * OK
   */
  200: {
    [key: string]: string
  }
}

export type ConversationsApiApiCreateConversationResponse =
  ConversationsApiApiCreateConversationResponses[keyof ConversationsApiApiCreateConversationResponses]

export type ConversationsApiApiJoinConversationData = {
  body?: never
  path: {
    /**
     * User Id
     */
    user_id: string
  }
  query: {
    /**
     * Conversation Id
     */
    conversation_id: string
  }
  url: '/api/conversations/{user_id}/join'
}

export type ConversationsApiApiJoinConversationErrors = {
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiJoinConversationError =
  ConversationsApiApiJoinConversationErrors[keyof ConversationsApiApiJoinConversationErrors]

export type ConversationsApiApiJoinConversationResponses = {
  /**
   * Response
   * OK
   */
  200: {
    [key: string]: string
  }
}

export type ConversationsApiApiJoinConversationResponse =
  ConversationsApiApiJoinConversationResponses[keyof ConversationsApiApiJoinConversationResponses]

export type ConversationsApiApiPostMessageData = {
  body: Message
  path: {
    /**
     * User Id
     */
    user_id: string
    /**
     * Conversation Id
     */
    conversation_id: string
  }
  query?: never
  url: '/api/messages/{user_id}/{conversation_id}'
}

export type ConversationsApiApiPostMessageErrors = {
  /**
   * Unprocessable Entity
   */
  422: ErrorResponse
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiPostMessageError =
  ConversationsApiApiPostMessageErrors[keyof ConversationsApiApiPostMessageErrors]

export type ConversationsApiApiPostMessageResponses = {
  /**
   * Response
   * OK
   */
  200: {
    [key: string]: string
  }
}

export type ConversationsApiApiPostMessageResponse =
  ConversationsApiApiPostMessageResponses[keyof ConversationsApiApiPostMessageResponses]

export type ConversationsApiApiPostMetadataData = {
  body: ConversationMetadata
  path: {
    /**
     * User Id
     */
    user_id: string
    /**
     * Conversation Id
     */
    conversation_id: string
  }
  query?: never
  url: '/api/metadata/{user_id}/{conversation_id}'
}

export type ConversationsApiApiPostMetadataErrors = {
  /**
   * Unprocessable Entity
   */
  422: ErrorResponse
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiPostMetadataError =
  ConversationsApiApiPostMetadataErrors[keyof ConversationsApiApiPostMetadataErrors]

export type ConversationsApiApiPostMetadataResponses = {
  /**
   * Response
   * OK
   */
  200: {
    [key: string]: string
  }
}

export type ConversationsApiApiPostMetadataResponse =
  ConversationsApiApiPostMetadataResponses[keyof ConversationsApiApiPostMetadataResponses]

export type ConversationsApiApiGetMessagesData = {
  body?: never
  path: {
    /**
     * User Id
     */
    user_id: string
    /**
     * Conversation Id
     */
    conversation_id: string
  }
  query?: never
  url: '/api/messages/{user_id}/{conversation_id}/get'
}

export type ConversationsApiApiGetMessagesErrors = {
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiGetMessagesError =
  ConversationsApiApiGetMessagesErrors[keyof ConversationsApiApiGetMessagesErrors]

export type ConversationsApiApiGetMessagesResponses = {
  /**
   * Response
   * OK
   */
  200: {
    [key: string]: unknown
  }
}

export type ConversationsApiApiGetMessagesResponse =
  ConversationsApiApiGetMessagesResponses[keyof ConversationsApiApiGetMessagesResponses]

export type ConversationsApiApiGetMetadataData = {
  body?: never
  path: {
    /**
     * User Id
     */
    user_id: string
    /**
     * Conversation Id
     */
    conversation_id: string
  }
  query?: never
  url: '/api/metadata/{user_id}/{conversation_id}/get'
}

export type ConversationsApiApiGetMetadataErrors = {
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiGetMetadataError =
  ConversationsApiApiGetMetadataErrors[keyof ConversationsApiApiGetMetadataErrors]

export type ConversationsApiApiGetMetadataResponses = {
  /**
   * Response
   * OK
   */
  200: {
    [key: string]: unknown
  }
}

export type ConversationsApiApiGetMetadataResponse =
  ConversationsApiApiGetMetadataResponses[keyof ConversationsApiApiGetMetadataResponses]

export type ConversationsApiApiGetUsersData = {
  body?: never
  path: {
    /**
     * User Id
     */
    user_id: string
    /**
     * Conversation Id
     */
    conversation_id: string
  }
  query?: never
  url: '/api/users/{user_id}/{conversation_id}/get'
}

export type ConversationsApiApiGetUsersErrors = {
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiGetUsersError =
  ConversationsApiApiGetUsersErrors[keyof ConversationsApiApiGetUsersErrors]

export type ConversationsApiApiGetUsersResponses = {
  /**
   * Response
   * OK
   */
  200: {
    [key: string]: unknown
  }
}

export type ConversationsApiApiGetUsersResponse =
  ConversationsApiApiGetUsersResponses[keyof ConversationsApiApiGetUsersResponses]

export type ConversationsApiApiListConversationsData = {
  body?: never
  path: {
    /**
     * User Id
     */
    user_id: string
  }
  query?: never
  url: '/api/conversations/{user_id}/get'
}

export type ConversationsApiApiListConversationsErrors = {
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiListConversationsError =
  ConversationsApiApiListConversationsErrors[keyof ConversationsApiApiListConversationsErrors]

export type ConversationsApiApiListConversationsResponses = {
  /**
   * Response
   * OK
   */
  200: {
    [key: string]: unknown
  }
}

export type ConversationsApiApiListConversationsResponse =
  ConversationsApiApiListConversationsResponses[keyof ConversationsApiApiListConversationsResponses]

export type ConversationsApiApiPostReactData = {
  body: React
  path: {
    /**
     * User Id
     */
    user_id: string
    /**
     * Conversation Id
     */
    conversation_id: string
  }
  query: {
    /**
     * Message Id
     */
    message_id: string
  }
  url: '/api/react/{user_id}/{conversation_id}'
}

export type ConversationsApiApiPostReactErrors = {
  /**
   * Internal Server Error
   */
  500: ErrorResponse
}

export type ConversationsApiApiPostReactError =
  ConversationsApiApiPostReactErrors[keyof ConversationsApiApiPostReactErrors]

export type ConversationsApiApiPostReactResponses = {
  /**
   * Response
   * OK
   */
  200: {
    [key: string]: unknown
  }
}

export type ConversationsApiApiPostReactResponse =
  ConversationsApiApiPostReactResponses[keyof ConversationsApiApiPostReactResponses]

export type ClientOptions = {
  baseURL: string
}
